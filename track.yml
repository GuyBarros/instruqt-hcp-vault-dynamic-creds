slug: hcp-vault-dynamic-credentials-alpha
type: track
title: "HCP Vault Dynamic Credentials Alpha\r"
teaser: Build and run container images with Docker on a virtual machine
description: |-
  # Virtual Machine with Docker
  To build and run container images, you need a virtual machine. This track
  show you how to do just that.

  ## Using this template
  To create your own track from this template, run this command:
  ```
  instruqt track create \
      --from templates/docker-vm \
      --title "My Docker track"
  ```
icon: https://storage.googleapis.com/instruqt-frontend/assets/hashicorp/tracks/vault.png
tags: [hcp vault,vault, database, dynamic-secrets ]
owner: hashicorp
developers:
- guy@hashicorp.com
- aburd@hashicorp.com
private: true
published: false
challenges:
- slug: 01-set-up-demo-enviroment
  type: challenge
  title: Setting up HCP Vault and AWS RDS Mysql Database
  teaser: set up HCP Vault and Database for dynamic secrets
  notes:
  - type: text
    contents: |
      # HCP Vault
      HCP Vault allows organizations to get Vault clusters up and running quickly, providing access to best-in-class secrets management and encryption capabilities with the platform providing resilience and operational excellence as a service.
  assignment: |
    Sign up to HCP Vault : https://portal.cloud.hashicorp.com/

    on This track we will automate the creation our enviroments, for this we will need HCP Service Principal to use with terraform.

    after signing up to Hashicorp Cloud Platform, navigate to Access control (IAM) -> Service Principal

    ```
    docker build -t my-service .
    ```

    Did you notice the tab with the source code editor, next to
    the terminal?

    To complete the
    challenge, press **Check**."
  tabs:
  - title: Terminal
    type: terminal
    hostname: docker-vm
  - title: Editor
    type: code
    hostname: docker-vm
    path: /app
  difficulty: basic
  timelimit: 600
- slug: 02-running-a-container
  type: challenge
  title: Starting a container
  teaser: Start the container image you've just built
  notes:
  - type: text
    contents: |
      # Starting a container image
      Container images can be started any where a container runtime is installed.
  assignment: |-
    Now that you have built a container image, you can run it.

    ## Step 1
    Run the following command to start the container:
    ```
    docker run --name some-container -p 80:80 -d my-service
    ```

    ## Step 2
    Check the nginx tab (next the the terminal tab) to verify if the container is running.
    You should see a "Welcom to nginx" message

    ## Step 3
    To verify if the container is running using the command line, run this command:
    ```
    docker container ls
    ```

    ## Check
    To complete this track, press **Check**
  tabs:
  - title: Terminal
    type: terminal
    hostname: docker-vm
  - title: nginx
    type: service
    hostname: docker-vm
    port: 80
  difficulty: basic
  timelimit: 600
